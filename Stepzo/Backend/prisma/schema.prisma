generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model cart {
  id       Int       @id @default(autoincrement())
  uid      Int
  pid      Int
  quantity Int?      @default(1)
  added_at DateTime? @default(now()) @db.Timestamp(6)
  products products  @relation(fields: [pid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users    users     @relation(fields: [uid], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model products {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  description   String?
  price         Decimal         @db.Decimal(10, 2)
  category      String          @db.VarChar(100)
  availability  Boolean?        @default(true)
  images        String          @db.VarChar(255)
  cart          cart[]
  order_details order_details[]
  wishlist      wishlist[]
}

model users {
  id                 Int        @id @default(autoincrement())
  name               String     @db.VarChar(100)
  email              String     @unique @db.VarChar(255)
  hashed_password    String
  verification_token String?    @db.VarChar(255)
  is_verified        Boolean?   @default(false)
  profile_pic        String?
  address            String?
  created_on         DateTime?  @default(now()) @db.Timestamp(6)
  cart               cart[]
  orders             orders[]
  wishlist           wishlist[]
}

model wishlist {
  id       Int       @id @default(autoincrement())
  uid      Int
  pid      Int
  added_at DateTime? @default(now()) @db.Timestamp(6)
  products products  @relation(fields: [pid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users    users     @relation(fields: [uid], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model order_details {
  id         Int       @id @default(autoincrement())
  order_id   Int?
  product_id Int?
  quantity   Int
  orders     orders?   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products   products? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model orders {
  id            Int             @id @default(autoincrement())
  user_id       Int?
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  order_details order_details[]
  users         users?          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
